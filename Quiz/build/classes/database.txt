#データベースの一覧を確認
SHOW DATABASES;

#Quizデータベースの作成
CREATE DATABASE quiz;

#再度確認
SHOW DATABASES;
#間違えた場合は、DROP DATABASE quiz;

#Quizデータベースの指定
use quiz

#指定されたかどうかの確認
SELECT DATABASE();

#指定したデータベースのテーブルの一覧を表示
SHOW TABLES;

#accountテーブルの作成
DROP TABLE account;
CREATE TABLE account (
user_id INT PRIMARY KEY AUTO_INCREMENT,
user_name VARCHAR(50),
email VARCHAR(100),
pass VARCHAR(100),
morf VARCHAR(5)
);

#テストデータ
INSERT INTO account (user_name,pass,email,morf)
VALUES ("たかし","1234","gmail.com","男");


#2回目以降は#を外してDROP
DROP TABLE kanji;

CREATE TABLE japanese(
id INT NOT NULL,
area INT NOT NULL,
question VARCHAR(100) NOT NULL,
answer VARCHAR(100)
);

DESC kanji;

#確認用データ
INSERT INTO kanji (id,area,name,ruby)
VALUES (1,10,'専門','せんもん'),
       (1,20,'机上','きじょう')
;
#追加データ
INSERT INTO kanji (id,area,name,ruby)
VALUES (2,10,'賃貸','ちんたい'),
       (2,20,'糖分','とうぶん'),
       (3,10,'窓口','まどぐち'),
       (3,20,'額面','がくめん'),
       (4,10,'俳優','はいゆう'),
       (4,20,'宝刀','ほうとう'),
       (5,10,'吸引','きゅういん'),
       (5,20,'選択','せんたく'),
       (6,10,'正座','せいざ'),
       (6,20,'対策','たいさく'),
       (7,10,'追跡','ついせき'),
       (7,20,'究極','きゅうきょく'),
       (8,10,'地獄','じごく'),
       (8,20,'困難','こんなん'),
       (9,10,'就職','しゅうしょく'),
       (9,20,'穀物','こくもつ'),
       (10,10,'限界','げんかい'),
       (10,20,'講義','こうぎ')
;

SELECT * FROM kanji;

#WHERE文で条件を絞れる=>area=?としてフォームから受け取った
#値をセットすれば取り出せる
SELECT * FROM kanji WHERE area = 10;
SELECT * FROM kanji WHERE area = 20;


#管理者機能付きのkanjiテーブル
DROP TABLE kanji;

CREATE TABLE kanji(
id INT NOT NULL,
area INT NOT NULL,
kind VARCHAR(100),
name VARCHAR(10) NOT NULL,
ruby VARCHAR(20) NOT NULL
);

DESC kanji;


#確認用データ
INSERT INTO kanji (id,area,name,ruby)
VALUES (1,10,'専門','せんもん'),
       (1,20,'机上','きじょう')
;
#追加データ
INSERT INTO kanji (id,area,name,ruby)
VALUES (2,10,'賃貸','ちんたい'),
       (2,20,'糖分','とうぶん'),
       (3,10,'窓口','まどぐち'),
       (3,20,'額面','がくめん'),
       (4,10,'俳優','はいゆう'),
       (4,20,'宝刀','ほうとう'),
       (5,10,'吸引','きゅういん'),
       (5,20,'選択','せんたく'),
       (6,10,'正座','せいざ'),
       (6,20,'対策','たいさく'),
       (7,10,'追跡','ついせき'),
       (7,20,'究極','きゅうきょく'),
       (8,10,'地獄','じごく'),
       (8,20,'困難','こんなん'),
       (9,10,'就職','しゅうしょく'),
       (9,20,'穀物','こくもつ'),
       (10,10,'限界','げんかい'),
       (10,20,'講義','こうぎ')
;

SELECT * FROM kanji;



SELECT * FROM kanji;



#AS文で主キー(プライマリーキー)を作れる=>総合問題とかに利用できそう
SELECT id + area AS number, name, ruby
FROM kanji
ORDER BY number;


DROP TABLE score;
CREATE TABLE score (
score_id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT NOT NULL,
subject INT NOT NULL,
area INT NOT NULL,
score INT NOT NULL,
percent INT NOT NULL,
day DATE
)
;


INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,10,50,50,'20170606');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,20,70,70,'20170606');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,10,80,80,'20170606');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,20,60,60,'20170606');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,10,80,80,'20170606');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,20,70,70,'20170607');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,10,50,50,'20170607');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,20,30,30,'20170607');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,10,40,40,'20170607');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,1,20,30,30,'20170607');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (2,1,10,50,50,'20170606');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (2,1,20,20,20,'20170606');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,2,20,30,30,'20170607');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (3,3,10,40,40,'20170607');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (1,3,20,30,30,'20170607');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (2,4,10,50,50,'20170606');
INSERT INTO score (user_id,subject,area,score,percent,day) VALUES (3,4,20,20,20,'20170606');



#user_idのデータの中でダブっているデータを取り出し合計や平均を求める
 SELECT SUM(score) FROM score GROUP BY user_id;

 SELECT AVG(score) FROM score GROUP BY user_id;

#user_idのデータの中でダブっているデータを取り出し合計や平均を求める
 SELECT SUM(score) FROM score GROUP BY user_id;

 SELECT AVG(score) FROM score GROUP BY user_id;

SELECT SUBSTRING(day,1,7) FROM score;

SELECT SUBSTRING(day,1,7) AS '月ごと'
FROM score
GROUP BY day;

#月ごとの各ユーザーの分野ごとの平均点をとりだす
 SELECT user_id, area,SUBSTRING(day,1,7) AS '月ごと', AVG(score)
     FROM score
     GROUP BY day,user_id;

#内部結合

SELECT * FROM score
INNER JOIN account
ON score.user_id = account.user_id;
;

#見たいカラムだけ指定してAS文で見やすくする
SELECT user_name AS "ユーザー名",
       subject AS "科目",
       area AS "分野",
       score AS "点数",
       percent AS "正解率",
       day AS "日付"
FROM score
INNER JOIN account
ON score.user_id = account.user_id;

#カラム内のデータを加工する,WHERE文で特定の科目に絞る
SELECT user_name AS "ユーザー名",
        CASE subject
          WHEN 1 THEN "国語"
          WHEN 2 THEN "算数"
          WHEN 3 THEN "理科"
          WHEN 4 THEN "社会"
         END
        AS "科目",
       area AS "分野",
       score AS "点数",
       percent AS "正解率",
       SUBSTRING(day,1,7) AS "日付"
FROM score
INNER JOIN account
ON score.user_id = account.user_id
WHERE subject = 1
;


#GROUP BYでダブってる値は一つにまとめ、その時の平均値を出す
SELECT user_name AS "ユーザー名",
        CASE subject
          WHEN 1 THEN "国語"
          WHEN 2 THEN "算数"
          WHEN 3 THEN "理科"
          WHEN 4 THEN "社会"
         END
        AS "科目",
       area AS "分野",
       AVG(score) AS "月ごとの点数の平均",
       AVG(percent) AS "月ごとの正解率の平均",
       SUBSTRING(day,1,7) AS "日付"
FROM score
INNER JOIN account
ON score.user_id = account.user_id
WHERE subject = 1
GROUP BY user_name,day
;
